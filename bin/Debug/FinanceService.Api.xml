<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FinanceService.Api</name>
    </assembly>
    <members>
        <member name="T:FinanceService.Api.Controllers.AccountsController">
            <summary>
            Controller for all account logic
            </summary>
        </member>
        <member name="M:FinanceService.Api.Controllers.AccountsController.#ctor(FinanceService.Application.Interfaces.IAccountService,Microsoft.Extensions.Logging.ILogger{FinanceService.Api.Controllers.AccountsController})">
            <summary>
            Account Controller Constructor. 
            Defines the required logger and service interfaces 
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:FinanceService.Api.Controllers.AccountsController.GetAllAccounts">
            <summary>
            Get All Accounts
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all accounts from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the account service returns a null task
            </returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.AccountsController.QueryAccount(System.String)">
            <summary>
            Find Account by Student Id
            </summary>
            <param name="id">Student Id</param>
            <returns>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with the account <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if no account was found
            </returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.AccountsController.Post(System.String)">
            <summary>
            Create student Account
            </summary>
            <param name="id">Student Id</param>
            <returns>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> if account was created <br/> 
            A 400 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if account was created <br/> 
            </returns>
        </member>
        <member name="T:FinanceService.Api.Controllers.InvoicesController">
            <summary>
            Controller for all invoice logic
            </summary>
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.#ctor(FinanceService.Application.Interfaces.IInvoiceService,Microsoft.Extensions.Logging.ILogger{FinanceService.Api.Controllers.InvoicesController})">
            <summary>
            Account Controller Constructor. 
            Defines the required logger and service interfaces 
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.GetAllInvoices">
            <summary>
            Get All Invoices
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all invoice records from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no  invoice records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the  invoice recordsservice returns a null task
            </returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.GetAllAcccountInvoices(System.String)">
            <summary>
            Get All Invoices
            </summary>
            <param name="id">Student id</param>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all invoice records from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no  invoice records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the  invoice recordsservice returns a null task
            </returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.FindInvoice(System.String)">
            <summary>
            Find Invoice by Reference
            </summary>
            <param name="reference"></param>
            <returns>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with the invoice <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if no invoice matched reference
            </returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.HasOutstandingBalance(System.String)">
            <summary>
            Check if student account has outstanding balance
            </summary>
            <param name="studentid"></param>
            <returns>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with true if the student has any outstanding invoices<br/> 
            </returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.CreateBookFeeInvoice(FinanceService.Application.DTOs.NewInvoiceDTO)">
            <summary>
            Create a new invoice
            </summary>
            <param name="invoiceDTO"></param>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> if invoice was created <br/> 
            A 400 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the invoice could not be created <br/> 
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.CreateTutitionInvoice(FinanceService.Application.DTOs.NewInvoiceDTO)">
            <summary>
            Create An Invoice for a Library Fine
            </summary>
            <param name="invoiceDTO"></param>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> if invoice was created <br/> 
            A 400 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the invoice could not be created <br/> 
        </member>
        <member name="M:FinanceService.Api.Controllers.InvoicesController.Remove(System.String)">
            <summary>
            Cancel Invoice
            </summary>
            <param name=" reference"></param>
            <returns>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> if invoice was canceled <br/> 
            A 400 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the invoice was not canceled or found <br/> 
            </returns>
        </member>
        <member name="T:FinanceService.Api.Controllers.PaymentsController">
            <summary>
            Controller for all payment logic
            </summary>
        </member>
        <member name="M:FinanceService.Api.Controllers.PaymentsController.#ctor(FinanceService.Application.Interfaces.IPaymentService,Microsoft.Extensions.Logging.ILogger{FinanceService.Api.Controllers.PaymentsController})">
            <summary>
            Payment Controller Constructor. 
            Defines the required logger and service interfaces 
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:FinanceService.Api.Controllers.PaymentsController.NewPayment(FinanceService.Application.DTOs.PaymentDTO)">
            <summary>
            Make a New Payment
            </summary>
            <param name="paymentDTO"></param>
            <returns></returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.PaymentsController.GetPayementsToBeProcessed">
            <summary>
            Get All Payments To Be Processed
            </summary>
            <param name="paymentDTO"></param>
            <returns></returns>
        </member>
        <member name="M:FinanceService.Api.Controllers.PaymentsController.ProcessPayment(FinanceService.Application.DTOs.PaymentDTO)">
            <summary>
            Process Single Payment
            </summary>
            <param name="paymentDTO"></param>
            <returns></returns>
        </member>
    </members>
</doc>
