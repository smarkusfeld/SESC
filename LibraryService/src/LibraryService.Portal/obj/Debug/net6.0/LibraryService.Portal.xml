<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryService.Portal</name>
    </assembly>
    <members>
        <member name="T:LibraryService.Api.Controllers.AccountController">
            <summary>
            Controller for all account logic
            </summary>
        </member>
        <member name="M:LibraryService.Api.Controllers.AccountController.#ctor(LibraryService.Application.Interfaces.Services.IAccountService,Microsoft.Extensions.Logging.ILogger{LibraryService.Api.Controllers.AccountController})">
            <summary>
            Account Controller Constructor. 
            Defines the required logger and service interfaces 
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:LibraryService.Api.Controllers.AccountController.GetAll">
            <summary>
            Get All Accounts
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all accounts from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the account service returns a null task
            </returns>
            
        </member>
        <member name="M:LibraryService.Api.Controllers.AccountController.GetLoanHistory(System.String)">
            <summary>
            Get user borrowing history
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all accounts from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the account service returns a null task
            </returns>
            
        </member>
        <member name="M:LibraryService.Api.Controllers.AccountController.Register(System.String)">
            <summary>
            New Student Account
            </summary>
            <returns> 
            A 201 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> the new account <br/> 
            A 400 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the account was not created<br/> 
            </returns>        
        </member>
        <member name="M:LibraryService.Api.Controllers.AccountController.Update(LibraryService.Application.Models.UpdatePinDTO)">
            <summary>
            Update Account Pin
            </summary>
            <param name="accountPinDTO"></param>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkResult"/> if the account was updated successfully<br/> 
            A 400 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the account could not be updated<br/> 
            </returns>     
        </member>
        <member name="T:LibraryService.Api.Controllers.BookController">
            <summary>
            Controller for all book logic 
            </summary>
        </member>
        <member name="M:LibraryService.Api.Controllers.BookController.#ctor(LibraryService.Application.Interfaces.Services.ICatalogueService,Microsoft.Extensions.Logging.ILogger{LibraryService.Api.Controllers.BookController})">
            <summary>
            Book Controller Constructor. 
            Defines the required logger and service interfaces 
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:LibraryService.Api.Controllers.BookController.GetAll">
            <summary> 
            Get All Books from library catalogue
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all books from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the catalogue service returns a null task
            </returns>
            
        </member>
        <member name="M:LibraryService.Api.Controllers.BookController.AddBook(System.String)">
            <summary>
            Add Book to Library. If book already exists, a new copy is added
            </summary>
            <returns> 
            A 201 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> with the new or updated book record<br/> 
            A 400 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the book record was not created<br/> 
            </returns>        
        </member>
        <member name="T:LibraryService.Api.Controllers.LoanController">
            <summary>
            Controller for all loan logic 
            </summary>
        </member>
        <member name="M:LibraryService.Api.Controllers.LoanController.#ctor(Microsoft.Extensions.Logging.ILogger{LibraryService.Api.Controllers.LoanController},LibraryService.Application.Services.LoanService)">
            <summary>
            Loan Controller Constructor. 
            Defines the required logger and service interfaces 
            </summary>
            <param name="service"></param>
            <param name="logger"></param>
        </member>
        <member name="M:LibraryService.Api.Controllers.LoanController.NewLoan(LibraryService.Application.Models.AccountDTO,System.String)">
            <summary>
            Create new book loan using isbn
            </summary>
            <returns> 
            A 201 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> with the new or updated book record<br/> 
            A 400 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the book record was not created<br/> 
            </returns>  
        </member>
        <member name="M:LibraryService.Api.Controllers.LoanController.Return(LibraryService.Application.Models.AccountDTO,System.String)">
            <summary>
            Return book using isbn
            </summary>
            <param name="account"></param>
            <param name="isbn"></param>
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with the completed loan record<br/> 
            A 400 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> if the loan was not reutned <br/> 
        </member>
        <member name="M:LibraryService.Api.Controllers.LoanController.RenewLoan(LibraryService.Application.Models.AccountDTO,System.String)">
            <summary>
            
            </summary>
            <param name="account"></param>
            <param name="isbn"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LibraryService.Api.Controllers.LoanController.GetAllActiveLoans">
            <summary>
             Display all books currently on loan
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all active loans from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the loan service returns a null task
            </returns>
        </member>
        <member name="M:LibraryService.Api.Controllers.LoanController.GetAllOverdueLoans">
            <summary>
            Display all overdue book loans
            </summary>
            <returns> 
            A 200 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> with all active loans from the database <br/> 
            A 204 status code prodeced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> if no records exists in the database <br/> 
            A 404 status code produced by the <seealso cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> if the loan service returns a null task
            </returns>
        </member>
        <member name="T:LibraryService.Portal.Middleware.ErrorHandlerMiddleware">
            <summary>
            https://jasonwatmore.com/post/2022/01/17/net-6-global-error-handler-tutorial-with-example 
            </summary>
        </member>
    </members>
</doc>
