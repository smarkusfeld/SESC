name: dockercompose10189594079601422213
services:
  adminer:
    image: adminer
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8080"
      protocol: tcp
    restart: always
  db:
    environment:
      MYSQL_DATABASE: librarydb
      MYSQL_ROOT_PASSWORD: tiaspbiqe2r
    image: mysql
    networks:
      default: null
    volumes:
    - type: volume
      source: library-mysql-data
      target: /var/lib/mysql
      volume: {}
  libraryservice.api:
    build:
      context: C:\Users\Sofia Markusfeld\Documents\Coursework\Level 7\SESC\LibraryService
      dockerfile: src/LibraryService.Api/Dockerfile
    container_name: libraryservice-api
    depends_on:
      db:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      MYSQL_DB: librarydb
      MYSQL_HOST: db
      MYSQL_PASSWORD: tiaspbiqe2r
      MYSQL_USER: root
    image: libraryserviceapi
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "5003"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Sofia Markusfeld\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Sofia Markusfeld\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose10189594079601422213_default
volumes:
  library-mysql-data:
    name: dockercompose10189594079601422213_library-mysql-data